name: dev ci/cd
# To automatically trigger a workflow, use "on" to define which events can cause the workflow to run
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
# A workflow run is made up of one or more "jobs", which run in parallel by default. 
jobs:
  # "build" is job_id it is unique identifier
  build:
    # define the type of machine(runner) to run the job on.
    runs-on: ubuntu-latest
    # A job contains a sequence of tasks called "steps". Steps can run commands,
    steps:
    # step 1 : check-out
    - name: check-out
      # "uses" keyword is used within a "step" and specify it should use "actions"
      uses: actions/checkout@v4 # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
    # step 2 : Set up JDK 17
    - name: set up jdk temurin 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '17'
    # step 3: set up application.properties
    - name: set up application.properties
      run: | # pipe character in is used to define multiline string
        sed -i 's/API_KEY_PLACEHOLDER/${{ secrets.BINANCE_API_KEY }}/g' web/src/main/resources/application.properties
        sed -i 's/API_SECRET_PLACEHOLDER/${{ secrets.BINANCE_API_SECRET }}/g' web/src/main/resources/application.properties
        sed -i 's/MONGO_URI_PLACEHOLDER/${{ secrets.MONGO_URI }}/g' web/src/main/resources/application.properties
    # step 4: build with gradle
    - name: build with gradle
      run: |
        chmod +x ./gradlew
        ./gradlew clean build -x test
    # step 5,6,7 : build and push the docker image
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: satanmoo/trading:latest # my_docker_hub_user_name/my_app_name:tag
      
